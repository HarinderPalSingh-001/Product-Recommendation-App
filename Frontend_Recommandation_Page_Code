import React, { useState } from 'react';
import axios from 'axios';

// Single product card component
function ProductCard({ product }) {
  return (
    <div
      className="product-card"
      style={{
        border: '1px solid #ccc',
        borderRadius: '8px',
        padding: '10px',
        margin: '10px',
        width: '250px',
        boxShadow: '2px 2px 8px rgba(0,0,0,0.1)',
      }}
    >
      <img
        src={product.image_url}
        alt={product.title}
        style={{
          width: '100%',
          height: '150px',
          objectFit: 'cover',
          borderRadius: '4px',
        }}
      />
      <div style={{ marginTop: '10px' }}>
        <h4>{product.title}</h4>
        <p style={{ fontWeight: 'bold' }}>{product.price}</p>
        <p>By: {product.brand}</p>
        <p>{product.generated_description}</p>
      </div>
    </div>
  );
}

// Main recommendation page
function RecommendationPage() {
  const [prompt, setPrompt] = useState('');
  const [recommendations, setRecommendations] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!prompt) return;

    setIsLoading(true);
    setError('');
    setRecommendations([]);

    try {
      const response = await axios.post(
        'http://127.0.0.1:5000/recommend', // Make sure this matches your backend port
        { query: prompt },
        {
          headers: {
            'Content-Type': 'application/json',
          },
        }
      );

      if (Array.isArray(response.data)) {
        setRecommendations(response.data);
      } else {
        setError('Invalid response from server.');
        console.error('Response data:', response.data);
      }
    } catch (err) {
      setError('Failed to get recommendations. Please try again.');
      console.error('Error response:', err.response || err);
    }

    setIsLoading(false);
  };

  return (
    <div style={{ maxWidth: '900px', margin: 'auto', padding: '20px' }}>
      <h2>Get Product Recommendations</h2>
      <p>Type in what you're looking for (e.g., "a modern red sofa")</p>

      <form
        onSubmit={handleSubmit}
        style={{ display: 'flex', marginBottom: '20px' }}
      >
        <input
          type="text"
          value={prompt}
          onChange={(e) => setPrompt(e.target.value)}
          placeholder="Enter your prompt..."
          style={{
            flex: 1,
            padding: '10px',
            fontSize: '16px',
            borderRadius: '4px',
            border: '1px solid #ccc',
          }}
        />
        <button
          type="submit"
          disabled={isLoading}
          style={{
            marginLeft: '10px',
            padding: '10px 20px',
            fontSize: '16px',
            borderRadius: '4px',
            cursor: 'pointer',
          }}
        >
          {isLoading ? 'Thinking...' : 'Get Recommendations'}
        </button>
      </form>

      {error && <p style={{ color: 'red' }}>{error}</p>}

      <div style={{ display: 'flex', flexWrap: 'wrap' }}>
        {recommendations.map((product) => (
          <ProductCard key={product.id} product={product} />
        ))}
      </div>
    </div>
  );
}

export default RecommendationPage;
